--- system/vold/fs/Ntfs.cpp.orig	2018-04-08 22:15:26.605130606 +0800
+++ system/vold/fs/Ntfs.cpp	2018-04-08 22:23:57.393253736 +0800
@@ -17,9 +17,15 @@
 #include "Ntfs.h"
 #include "Utils.h"
 
+#define LOG_TAG "Vold"
+
 #include <android-base/logging.h>
 #include <android-base/stringprintf.h>
 
+#include <cutils/log.h>
+
+#include <logwrap/logwrap.h>
+
 #include <vector>
 #include <string>
 
@@ -33,11 +39,7 @@
 
 static const char* kMkfsPath = "/system/bin/mkfs.ntfs";
 static const char* kFsckPath = "/system/bin/fsck.ntfs";
-#ifdef CONFIG_KERNEL_HAVE_NTFS
-static const char* kMountPath = "/system/bin/mount";
-#else
 static const char* kMountPath = "/system/bin/mount.ntfs";
-#endif
 
 bool IsSupported() {
     return access(kMkfsPath, X_OK) == 0
@@ -59,18 +61,39 @@
 status_t Mount(const std::string& source, const std::string& target, bool ro,
         bool remount, bool executable, int ownerUid, int ownerGid, int permMask,
         bool createLost) {
+    int rc;
+    unsigned long flags;
     char mountData[255];
 
     const char* c_source = source.c_str();
     const char* c_target = target.c_str();
 
+    flags = MS_NODEV | MS_NOSUID | MS_DIRSYNC | MS_NOATIME;
+
+    flags |= (executable ? 0 : MS_NOEXEC);
+    flags |= (ro ? MS_RDONLY : 0);
+    flags |= (remount ? MS_REMOUNT : 0);
+
+    snprintf(mountData, sizeof(mountData),
+            "utf8,uid=%d,gid=%d,fmask=%o,dmask=%o",
+            ownerUid, ownerGid, permMask, permMask);
+
+    rc = mount(c_source, c_target, "ntfs", flags, mountData);
+
+    if (rc && errno == EROFS) {
+        SLOGE("%s appears to be a read only filesystem - retrying mount RO", c_source);
+        flags |= MS_RDONLY;
+        rc = mount(c_source, c_target, "ntfs", flags, mountData);
+    }
+
+    if (!rc)
+        return rc;
+
+    SLOGE("mount ntfs errno %d, try ntfs-3g again", errno);
+    
     sprintf(mountData,
-#ifdef CONFIG_KERNEL_HAVE_NTFS
-            "utf8,uid=%d,gid=%d,fmask=%o,dmask=%o,nodev,nosuid",
-#else
             "utf8,uid=%d,gid=%d,fmask=%o,dmask=%o,"
             "shortname=mixed,nodev,nosuid,dirsync",
-#endif
             ownerUid, ownerGid, permMask, permMask);
 
     if (!executable)
@@ -82,10 +105,6 @@
 
     std::vector<std::string> cmd;
     cmd.push_back(kMountPath);
-#ifdef CONFIG_KERNEL_HAVE_NTFS
-    cmd.push_back("-t");
-    cmd.push_back("ntfs");
-#endif
     cmd.push_back("-o");
     cmd.push_back(mountData);
     cmd.push_back(c_source);
