diff -Nur system/vold/fs.orig/Exfat.cpp system/vold/fs/Exfat.cpp
--- system/vold/fs.orig/Exfat.cpp	2018-02-07 23:36:54.484230779 +0800
+++ system/vold/fs/Exfat.cpp	2018-02-19 12:29:18.657805408 +0800
@@ -35,18 +35,16 @@
 static const char* kMkfsPath = "/sbin/mkfs.exfat";
 static const char* kFsckPath = "/sbin/fsck.exfat";
 #ifdef CONFIG_KERNEL_HAVE_EXFAT
-static const char* kMountPath = "/sbin/mount";
-#else
-static const char* kMountPath = "/sbin/mount.exfat";
+static const char* kMountPathK = "/sbin/mount";
 #endif
+static const char* kMountPath = "/sbin/mount.exfat";
 #else
 static const char* kMkfsPath = "/system/bin/mkfs.exfat";
 static const char* kFsckPath = "/system/bin/fsck.exfat";
 #ifdef CONFIG_KERNEL_HAVE_EXFAT
-static const char* kMountPath = "/system/bin/mount";
-#else
-static const char* kMountPath = "/system/bin/mount.exfat";
+static const char* kMountPathK = "/system/bin/mount";
 #endif
+static const char* kMountPath = "/system/bin/mount.exfat";
 #endif
 
 bool IsSupported() {
@@ -72,22 +70,37 @@
     const char* c_source = source.c_str();
     const char* c_target = target.c_str();
 
-    sprintf(mountData,
 #ifdef CONFIG_KERNEL_HAVE_EXFAT
+    {
+    	sprintf(mountData,
             "noatime,nodev,nosuid,uid=%d,gid=%d,fmask=%o,dmask=%o,%s,%s",
-#else
-            "noatime,nodev,nosuid,dirsync,uid=%d,gid=%d,fmask=%o,dmask=%o,%s,%s",
+            ownerUid, ownerGid, permMask, permMask,
+            (executable ? "exec" : "noexec"),
+            (ro ? "ro" : "rw"));
+
+    	std::vector<std::string> cmd;
+    	cmd.push_back(kMountPathK);
+    	cmd.push_back("-t");
+    	cmd.push_back("exfat");
+    	cmd.push_back("-o");
+    	cmd.push_back(mountData);
+    	cmd.push_back(c_source);
+    	cmd.push_back(c_target);
+
+    	status_t res = ForkExecvp(cmd);
+    	if (res == OK)
+	    return res;
+    }
 #endif
+
+    sprintf(mountData,
+            "noatime,nodev,nosuid,dirsync,uid=%d,gid=%d,fmask=%o,dmask=%o,%s,%s",
             ownerUid, ownerGid, permMask, permMask,
             (executable ? "exec" : "noexec"),
             (ro ? "ro" : "rw"));
 
     std::vector<std::string> cmd;
     cmd.push_back(kMountPath);
-#ifdef CONFIG_KERNEL_HAVE_EXFAT
-    cmd.push_back("-t");
-    cmd.push_back("exfat");
-#endif
     cmd.push_back("-o");
     cmd.push_back(mountData);
     cmd.push_back(c_source);
diff -Nur system/vold/fs.orig/Ntfs.cpp system/vold/fs/Ntfs.cpp
--- system/vold/fs.orig/Ntfs.cpp	2018-02-07 23:36:54.493230673 +0800
+++ system/vold/fs/Ntfs.cpp	2018-02-19 12:30:17.663245321 +0800
@@ -35,18 +35,16 @@
 static const char* kMkfsPath = "/sbin/mkfs.ntfs";
 static const char* kFsckPath = "/sbin/fsck.ntfs";
 #ifdef CONFIG_KERNEL_HAVE_NTFS
-static const char* kMountPath = "/sbin/mount";
-#else
-static const char* kMountPath = "/sbin/mount.ntfs";
+static const char* kMountPathK = "/sbin/mount";
 #endif
+static const char* kMountPath = "/sbin/mount.ntfs";
 #else
 static const char* kMkfsPath = "/system/bin/mkfs.ntfs";
 static const char* kFsckPath = "/system/bin/fsck.ntfs";
 #ifdef CONFIG_KERNEL_HAVE_NTFS
-static const char* kMountPath = "/system/bin/mount";
-#else
-static const char* kMountPath = "/system/bin/mount.ntfs";
+static const char* kMountPathK = "/system/bin/mount";
 #endif
+static const char* kMountPath = "/system/bin/mount.ntfs";
 #endif
 
 bool IsSupported() {
@@ -74,13 +72,37 @@
     const char* c_source = source.c_str();
     const char* c_target = target.c_str();
 
-    sprintf(mountData,
 #ifdef CONFIG_KERNEL_HAVE_NTFS
+    {
+        sprintf(mountData,
             "utf8,uid=%d,gid=%d,fmask=%o,dmask=%o,nodev,nosuid",
-#else
+            ownerUid, ownerGid, permMask, permMask);
+
+        if (!executable)
+            strcat(mountData, ",noexec");
+        if (ro)
+            strcat(mountData, ",ro");
+        if (remount)
+            strcat(mountData, ",remount");
+
+        std::vector<std::string> cmd;
+        cmd.push_back(kMountPathK);
+        cmd.push_back("-t");
+        cmd.push_back("ntfs");
+        cmd.push_back("-o");
+        cmd.push_back(mountData);
+        cmd.push_back(c_source);
+        cmd.push_back(c_target);
+
+        status_t res = ForkExecvp(cmd);
+        if (res == OK)
+            return res;
+    }
+#endif
+
+    sprintf(mountData,
             "utf8,uid=%d,gid=%d,fmask=%o,dmask=%o,"
             "shortname=mixed,nodev,nosuid,dirsync",
-#endif
             ownerUid, ownerGid, permMask, permMask);
 
     if (!executable)
@@ -92,10 +114,6 @@
 
     std::vector<std::string> cmd;
     cmd.push_back(kMountPath);
-#ifdef CONFIG_KERNEL_HAVE_NTFS
-    cmd.push_back("-t");
-    cmd.push_back("ntfs");
-#endif
     cmd.push_back("-o");
     cmd.push_back(mountData);
     cmd.push_back(c_source);
